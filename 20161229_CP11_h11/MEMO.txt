【やることアイデア】
・コメントリファクタリング (コーディング追加時にどこに何を追加したらいいかわかりやすくなるため)
	1.main.cpp
	2.helper_display.cpp
	3.helper_input.cpp
	4.scene1_
・追加機能
	1.scene1に組み込みキャラからの選択を追加
		・そもそものscene1画面を再設計
	2.
	3.戦闘（タイマン）呼称「とうぎじょう」？追加
		【必要画面】
		1.キャラ選択画面
			BGM
		2.戦闘画面
			BGM
			効果音
			色とか
・設計手順
	sakuraエディタで画面設計
	画面設計通りに画面表示を実装するために、helper_displayを充実させる。
		１．枠線を表示する関数（左上XY座標、右下XY座標） DONE
		２．枠線の内側をクリアする関数
		３．指定領域をクリアする関数（左上XY座標、右下XY座標） DONE
		４．指定領域にもじを表示する機能（文字数をオーバーしたら、折り返す）
	・描画位置をシーンごとのグローバル変数にして指定をする形にする（カスタマイズを容易にできるはず）
		・返り値をｔArea（左上、右下）（不要な場合はつかわなきゃいい）
		・次の場所はポインタで。

	・上から順に、リファクタリングしていく。
		・いままでのを、Display使用にかえていく。（tArea, tPoint2D使用版にすること、座標を絶対値ではなく、変数使用に変更する。）
		・ただし、本題から外れすぎないようにする。
		・問題は、text表示を枠内で表示することを関数化、一般化するためのロジック。



		【実装】
		０．Createシーンを作成（新規版で）
			一気に流れていくので、人数確認→ステータス表示まで。
			一気に書ききる関数は作れない（表示待ち、入力してもらう部分などもあるため）
			場所の制御は、呼び出し側で行う
		１．１行表示（普通）　１行表示（Wait）を作成。　Waitは今後の課題で。
		２．TextAreaを返す関数
		３．Area内かどうか確認する関数